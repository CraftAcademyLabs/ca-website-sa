%section
  .container
    .centred-row

      %h2 Course Structure
      %p.copy--left
        Below is the breakdown of our course structure. To keep pace with the fast-moving nature of the tech industry we update our curriculum frequently, so please be aware that this structure is dynamic and prone to regular changes.

      %h3 The Pre-Course

      %p.copy--left
        In the four weeks preceding the course, students take part in a mandatory part-time pre-course to ensure all students
        obtain the required basic level of competence.
      %p.copy--left
        We focus on the foundations: command line, version control and the basics of Ruby. The pre-course requires an average of 15-20 hours per week to complete successfully.
      %p.copy--left
        Access to a computer with an internet connection is a necessity. Students will have access to a coach, to help direct their learning and assist with any technical problems.
        Each Weekend during the pre-course, we will set Students up with a challenge to help solidify and focus the students' learning and to check in on their progress.

      %h3 Week 1 — Test-Driven Development and Object-Oriented Programming

      %p.copy--left
        The main topics of week 1 are test-driven development and object-oriented programming. By now the students have some experience writing pure Ruby code and are familiar with the functionality of core Ruby classes. This week we starting creating our own classes in a test-driven way. The aim of this week is to understand how to structure the code well using objects. The Friday challenge involves writing a simple object-oriented system of interacting classes.

      %h3 Week 2 — Further TDD and OOP

      %p.copy--left
        This week we'll be building a game using test-driven development and object-oriented programming to make sure all students understand these important concepts well. We'll also cover more advanced Ruby topics: lambdas vs procs, composition vs inheritance, iterators, and recursion. The Friday challenge involves reimplementing some advanced methods of the Ruby core library.

      %h3 Week 3 — Introduction to Web Development

      %p.copy--left
        By now the students are comfortable using Ruby and writing object-oriented code in a test-driven way. In week 3 we focus on the fundamentals of the web: HTTP protocol, Sinatra framework, HTML & CSS. We also learn how to deploy our code to Heroku and use the development tools in Chrome. The Friday challenge involves building a Sinatra application and deploying it to Heroku.

      %h3 Week 4 — Databases and User Management

      %p.copy--left
        It's time to learn how to add a relational database to a Sinatra application using DataMapper. In this week, we talk about relational databases, key-value stores, and SQL. We also spend a lot of time discussing proper management of user accounts: using hashing and salting, choosing a good hashing algorithm and mitigating common security risks. The students write a user management system (sign up, sign in, sign out, etc) from scratch paying special attention to the security aspects. Finally, the students also learn how to use Capybara to test-drive web applications. The Friday challenge focuses on relational databases.

      %h3 Week 5 — Front-End Technologies

      %p.copy--left
        Now that the students can build database-backed Sinatra applications in test-driven mode while paying attention to security considerations, it's time to start talking about other front-end technologies: JavaScript, jQuery, AJAX and responsive design. The Friday challenge asks the students to reimplement the front-end of one of the most popular websites in the world.

      %h3 Week 6 — Lab Week

      %p.copy--left
        This is a less structured week to allow students to consolidate their learning. Students may choose to revisit topics from the previous weeks, catch up on missed work or explore new projects.

      %h3 Week 7 — AngularJS

      %p.copy--left
        AngularJS is a powerful JavaScript framework that allows developers to use the same programming language for both their front-end and back-end development. This week, students will create a simple-yet-powerful interactive web application. The Friday challenge is based on refreshing Ruby knowledge.

      %h3 Week 8 — Ruby on Rails Basics

      %p.copy--left
        In week 8 we start working with Ruby on Rails. By now the students have a solid understanding of Ruby, the web (HTTP, HTML, JavaScript, etc) and have experience using databases. Armed with all this knowledge, they find Rails easy to understand because it merely automates what they can do without it. This week we talk about ActiveRecord, asset pipeline, routing, and Rails architecture. The Friday challenge focuses on the basics of Ruby on Rails.

      %h3 Week 9 — Advanced Ruby on Rails Topics

      %p.copy--left
        This week we talk about more advanced topics: WebSockets, HTML5 APIs, using Twitter Bootstrap or Foundation, connecting to various APIs: Stripe, Twilio, etc. The challenge for this week focuses on these topics.

      %h3 Week 10 - 11 — The Final Project

      %p.copy--left
        By now the students are confident junior developers. To put their skills to the test, they build a final project that shows how far they've come since they started. This week we introduce few new topics but instead focus on helping the students to build the first version of their final project.

      %p.copy--left
        Early in the week, we declare a feature freeze to make sure the final projects are as polished as possible. This is going to be the most intensive week at Craft Academy when all teams stay late trying to outperform each other to write the most impressive code. There is no Friday challenge. Instead, we have a graduation ceremony, followed by a party attended by friends, families, hiring partners, recruiters, ex-students and prospective students of Craft Academy.

      %h3 Week 12 — Hiring Week

      %p.copy--left
        This week our new graduates will receive the personal attention of our expert careers team. They will focus on honing life-long learning skills and preparing to enter the jobs market. This could include technical tests, working on open-source code or even working on projects for charities that we partner with.
